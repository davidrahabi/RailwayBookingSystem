DROP DATABASE `traindb`;
CREATE SCHEMA `traindb`;
USE `traindb`;

CREATE TABLE `train` (
	trainid int PRIMARY KEY
);

CREATE TABLE `station` (
	stationid int PRIMARY KEY,
    station_name varchar(50),
    state varchar(50),
    city varchar(50)
);

CREATE TABLE `train_schedule` (
	line_name varchar(50),
    fare float,
    travel_time int,
    departure_time datetime,
    arrival_time datetime,
    origin_station int NOT NULL,
    destination_station int NOT NULL,
    train int NOT NULL,
    PRIMARY KEY(train, line_name, departure_time),
    FOREIGN KEY (origin_station) REFERENCES station(stationid)
		ON DELETE RESTRICT #cannot allow a station to be deleted without verifying if its an destination station for any schedules, since they depend on it
        ON UPDATE CASCADE, #if its updated, update
    FOREIGN KEY (destination_station) REFERENCES station(stationid)
		ON DELETE RESTRICT #cannot allow a station to be deleted without verifying if its an origin station for any schedules, since they depend on it
        ON UPDATE CASCADE, #if its updated update
    FOREIGN KEY (train) REFERENCES train(trainid)
		ON DELETE RESTRICT #keeps integrity of schedule, cannot allow for a rogue deletion of a train since many schedules could depend on it
        ON UPDATE CASCADE #if its updated, update
);

CREATE TABLE `stops` (
	arrival_time datetime,
    departure_time datetime,
    stop_number int, #which stop we are on
    fare float,
    train int,
    line_name varchar(50),
    origin_departure_time datetime,
    station int,
    PRIMARY KEY(train, line_name, origin_departure_time, station),
    FOREIGN KEY (train, line_name, origin_departure_time) REFERENCES train_schedule(train, line_name, departure_time)
		ON DELETE CASCADE #if a whole schedule is deleted, remove any stops affiliated with that schedule
        ON UPDATE CASCADE , #if schedule updated, update accordingly
    FOREIGN KEY (station) REFERENCES station(stationid)
		ON DELETE RESTRICT #do not allow a station to be deleted, because there could be a lot of schedules dependent on this station
        ON UPDATE CASCADE #update as its updated
);

CREATE TABLE `customers` (
  `email` varchar(50) PRIMARY KEY,
  `username` varchar(50),
  `password` varchar(50),
  `lname` varchar(50),
  `fname` varchar(50),
  `is_child` boolean,
  `is_senior` boolean,
  `is_disabled` boolean,
  `role` varchar(20) DEFAULT 'Customer' CHECK (`role` in ('Customer'))
);

CREATE TABLE `employees` (
	ssn char(11) PRIMARY KEY,
	username varchar(50),
	`password` varchar(50),
	lname varchar(50),
	fname varchar(50),
	`role` varchar(20) NOT NULL CHECK (`role` in ('Admin', 'Rep'))
);

CREATE TABLE `reservation` (
	reservation_number int,
    reservation_date datetime,
	reservation_type varchar(50),
    fare float,
    is_active boolean,
    email varchar(50),
    train int,
    line_name varchar(50),
    departure_time datetime,
    pair_id int DEFAULT NULL,
    PRIMARY KEY (reservation_number),
    FOREIGN KEY (train, line_name, departure_time) REFERENCES train_schedule(train, line_name, departure_time)
		ON DELETE SET NULL #visible null train values for deleted schedules
        ON UPDATE CASCADE, #if it updates over there, update here
    FOREIGN KEY (email) REFERENCES customers(email)
		ON DELETE SET NULL #if a customer is deleted, still want to book keep reservations made
        ON UPDATE CASCADE # customer info updated, update here
    );

CREATE TABLE `forum` (
	discussionID int PRIMARY KEY,
    question text,
    answer text #when doing jsp page, when you do the insert for question, just insert 'Awaiting Response' for the answer field
);

#select where r.email = user_email
#customer based views
CREATE VIEW Customer_Res AS
SELECT *
FROM reservation r;

#select where t.origin_station = requested origin and t.destination_station = reqeusted dest and DATE(t.departure_time) = reqeuested date
CREATE VIEW search_train AS
SELECT *
FROM train_schedule t;

#select where t.origin_station = requested origin and t.destination_station = reqeusted dest and DATE(t.departure_time) = reqeuested date
CREATE VIEW see_stops AS
SELECT
	s.arrival_time ,
    s.departure_time AS stop_departure_time,
    s.stop_number,
    s.fare,
    s.train,
    s.station,
    t.origin_station,
    t.destination_station,
    t.departure_time,
    s.line_name,
    t.fare AS total_fare
FROM stops s
JOIN train_schedule t ON
	t.train = s.train
    AND t.line_name = s.line_name
    AND t.departure_time = s.origin_departure_time;
#sort by different criteria (by arrival time, departure time, fare) 

    
#cust. rep based views
CREATE VIEW edit_schedule AS
SELECT
	t.line_name,
    t.fare,
    t.travel_time,
    t.departure_time,
    t.arrival_time,
    t.origin_station,
    t.destination_station,
    t.train,
    os.station_name AS origin_name,
    ds.station_name AS destination_name
FROM train_schedule t
JOIN station os ON t.origin_station = os.stationid
JOIN station ds ON t.destination_station = ds.stationid;

#select where t.origin_station = requested station OR  t.destination = requested station
CREATE VIEW list_schedules AS
SELECT *
FROM train_schedule t;
    
#select where r.line_name = requested line and r.departure_time = requested_date
CREATE VIEW list_customers AS
SELECT c.fname, c.lname, r.line_name, r.departure_time, c.email, r.reservation_number, DATE(r.departure_time) AS date_res
FROM customers c
JOIN reservation r ON
	c.email = r.email
ORDER BY c.fname, c.lname;


#admin based views
CREATE VIEW manage_reps AS
SELECT *
FROM employees e
WHERE e.role = 'Rep';

CREATE VIEW sales_report AS
SELECT
	YEAR(r.reservation_date) AS year,
	MONTH(r.reservation_date) AS month,
    SUM(r.fare) AS total_revenue
FROM reservation r
WHERE r.is_active = true
GROUP BY
	YEAR(r.reservation_date), MONTH(r.reservation_date)
ORDER BY
	year DESC, month DESC;
    
#select where c.email = user_email
CREATE VIEW list_reservation_customer AS  
SELECT
    r.reservation_number,
    r.reservation_date,
    r.reservation_type,
    r.fare,
    r.email,
    c.lname,
    c.fname
FROM reservation r
JOIN customers c ON
	c.email = r.email
WHERE r.is_active = true;

CREATE VIEW list_reservation_line AS  
SELECT
    r.reservation_number,
    r.reservation_date,
    r.reservation_type,
    r.fare,
    r.line_name
FROM reservation r
WHERE r.is_active = true;

CREATE VIEW customer_revenue AS
SELECT
	SUM(r.fare) AS total_revenue,
	c.email,
    	c.lname,
    	c.fname
FROM reservation r
JOIN customers c ON
	c.email = r.email
WHERE r.is_active = true
GROUP BY r.email;

CREATE VIEW best_customer AS
SELECT
	c.fname,
    c.lname,
	SUM(r.fare) AS total_revenue
FROM reservation r
JOIN customers c ON
	c.email = r.email
WHERE r.is_active = true
GROUP BY r.email
ORDER BY total_revenue DESC;

CREATE VIEW line_revenue AS
SELECT
	r.line_name,
	SUM(r.fare) AS total_revenue
FROM reservation r
WHERE r.is_active = true
GROUP BY r.line_name;


CREATE VIEW five_lines AS
SELECT
	r.line_name,
	YEAR(r.reservation_date) AS year,
	MONTH(r.reservation_date) AS month,
    COUNT(r.reservation_number) AS total_reservations
FROM reservation r
WHERE r.is_active = true
GROUP BY
	r.line_name, YEAR(r.reservation_date), MONTH(r.reservation_date);
    
    
#Rep Login 
INSERT INTO `employees`
VALUES
('123-45-6789', 'rep1', 'rep1pass1', 'John', 'Doe', 'Rep'),
('734-92-9357', 'repLogin', 'pass123', 'Chris', 'Bob', 'Rep'),
('111-11-1111', 'ad1', 'ad1pass1', 'Bobby', 'Boob', 'Admin');


INSERT INTO `station`
VALUES (1, 'Central Station', 'New York', 'New York');
INSERT INTO `station` 
VALUES (2, 'Union Station', 'California', 'Los Angeles');
INSERT INTO `station`
VALUES (3, 'Kings Cross', 'Illinois', 'Chicago');
INSERT INTO `station`
VALUES (4, 'Springfield Station', 'Massachusetts', 'Springfield');

INSERT INTO `station` VALUES
(5, 'Grand Central', 'New York', 'New York'),
(6, 'Penn Station', 'New York', 'New York'),
(7, 'Downtown Station', 'New York', 'New York'),
(8, 'Airport Station', 'New York', 'New York');

INSERT INTO `forum`
VALUES
(1, "is this on?", "Awaiting Response"),
(2, "i love pizza?", "Awaiting Response"),
(3, "is brocolli healfy?", "Booty ");


INSERT INTO `customers`
VALUES ('jake.doe@example.com', 'jake_doe', 'password123', 'Doe', 'Jake', false, false, false, 'Customer');
INSERT INTO `customers`
VALUES ('jane.smith@example.com', 'jane_smith', 'securepass456', 'Smith', 'Jane', true, false, false, 'Customer');
INSERT INTO `customers`
VALUES ('alex.jones@example.com', 'alex_jones', 'alexpass789', 'Jones', 'Alex', false, true, true, 'Customer');

INSERT INTO train (trainid) VALUES (1), (2), (3), (4), (5);

INSERT INTO train_schedule (line_name, fare, travel_time, departure_time, arrival_time, origin_station, destination_station, train) VALUES
('Northeast Express', 150.00, 180, '2024-12-25 08:00:00', '2024-12-25 11:00:00', 1, 3, 1),
('Northeast Express', 100.00, 60, '2024-12-25 12:00:00', '2024-12-25 13:00:00', 3, 4, 1),
('Coastal Line', 50.00, 120, '2024-12-25 10:00:00', '2024-12-25 12:00:00', 4, 5, 2),
('Coastal Line', 75.00, 150, '2024-12-25 14:00:00', '2024-12-25 16:30:00', 2, 5, 2),
('Empire Builder', 75.00, 150, '2024-12-26 14:00:00', '2024-12-26 16:30:00', 5, 2, 3),
('Empire Builder', 60.00, 90, '2024-12-25 07:30:00', '2024-12-25 09:00:00', 1, 4, 3),
('Empire Builder', 120.00, 180, '2024-12-25 10:00:00', '2024-12-25 13:00:00', 4, 6, 3),
('Metro Flyer', 20.00, 40, '2024-12-25 09:00:00', '2024-12-25 09:40:00', 7, 8, 4),
('Metro Flyer', 25.00, 50, '2024-12-25 10:00:00', '2024-12-25 10:50:00', 8, 2, 4),
('City Sprinter', 30.00, 60, '2024-12-25 08:00:00', '2024-12-25 09:00:00', 7, 4, 5),
('City Sprinter', 35.00, 70, '2024-12-25 09:30:00', '2024-12-25 10:40:00', 4, 3, 5),
('Capitol Connector', 80.00, 120, '2024-12-25 11:00:00', '2024-12-25 13:00:00', 3, 5, 1),
('Capitol Connector', 90.00, 130, '2024-12-25 14:00:00', '2024-12-25 16:10:00', 5, 6, 1),
('Hudson Hopper', 45.00, 80, '2024-12-25 15:00:00', '2024-12-25 16:20:00', 1, 2, 2),
('Hudson Hopper', 55.00, 90, '2024-12-25 16:30:00', '2024-12-25 18:00:00', 2, 4, 2),
('Atlantic Limited', 70.00, 100, '2024-12-25 08:30:00', '2024-12-25 10:10:00', 2, 5, 3),
('Atlantic Limited', 75.00, 110, '2024-12-25 11:00:00', '2024-12-25 12:50:00', 5, 8, 3),
('Regional Connector', 25.00, 50, '2024-12-25 13:00:00', '2024-12-25 13:50:00', 8, 7, 4),
('Regional Connector', 30.00, 60, '2024-12-25 14:00:00', '2024-12-25 15:00:00', 7, 1, 4),
('Liberty Line', 95.00, 180, '2024-12-25 15:30:00', '2024-12-25 18:30:00', 1, 6, 5),
('Liberty Line', 85.00, 170, '2024-12-25 19:00:00', '2024-12-25 22:00:00', 6, 4, 5);

INSERT INTO stops (arrival_time, departure_time, stop_number, fare, train, line_name, origin_departure_time, station) VALUES
('2024-12-25 09:00:00', '2024-12-25 09:15:00', 1, 50.00, 1, 'Northeast Express', '2024-12-25 08:00:00', 7),
('2024-12-25 10:30:00', '2024-12-25 10:45:00', 2, 50.00, 1, 'Northeast Express', '2024-12-25 08:00:00', 2),
('2024-12-25 11:00:00', '2024-12-25 11:30:00', 3, 50.00, 1, 'Northeast Express', '2024-12-25 08:00:00', 3);

INSERT INTO reservation (reservation_number, reservation_date, reservation_type, fare, is_active, email, train, line_name, departure_time, pair_id)
VALUES 
(1001, '2024-12-01 10:00:00', 'One Way', 150.00, true, 'jake.doe@example.com', 1, 'Northeast Express', '2024-12-25 08:00:00', NULL),
(1002, '2024-12-02 14:30:00', 'Round Trip', 300.00, true, 'jane.smith@example.com', 2, 'Coastal Line', '2024-12-25 10:00:00', NULL),
(1003, '2024-12-03 09:15:00', 'One Way', 60.00, true, 'alex.jones@example.com', 3, 'Empire Builder', '2024-12-25 07:30:00', NULL),
(1004, '2024-12-04 11:45:00', 'One Way', 95.00, true, 'jake.doe@example.com', 5, 'Liberty Line', '2024-12-25 15:30:00', NULL),
(1005, '2024-12-05 16:20:00', 'Round Trip', 170.00, true, 'jane.smith@example.com', 4, 'Metro Flyer', '2024-12-25 09:00:00', NULL),
(1006, '2024-12-06 08:45:00', 'One Way', 75.00, true, 'alex.jones@example.com', 3, 'Atlantic Limited', '2024-12-25 08:30:00', NULL),
(1007, '2024-12-07 13:30:00', 'One Way', 35.00, true, 'jake.doe@example.com', 5, 'City Sprinter', '2024-12-25 09:30:00', NULL),
(1008, '2024-12-08 15:10:00', 'Round Trip', 180.00, true, 'jane.smith@example.com', 1, 'Capitol Connector', '2024-12-25 11:00:00', NULL),
(1009, '2024-12-09 17:00:00', 'One Way', 55.00, true, 'alex.jones@example.com', 2, 'Hudson Hopper', '2024-12-25 15:00:00', NULL);


INSERT INTO train (trainid) VALUES
(1001),
(1002);
INSERT INTO station (stationid, station_name, state, city) VALUES 
(101, 'Parker Station', 'NY', 'New York'),
(102, 'Starker Station', 'MA', 'Boston'),
(300, 'Providence Station', 'RI', 'Providence'),
(400, 'New Haven Union', 'CT', 'New Haven'),
(500, 'Hartford Union', 'CT', 'Hartford'),
(600, 'Springfield Central', 'MA', 'Springfield'),
(700, 'Worcester Union', 'MA', 'Worcester');

-- Northeast direction (Penn to South)
INSERT INTO train_schedule (line_name, fare, travel_time, departure_time, arrival_time, origin_station, destination_station, train)
VALUES ('Northeast Express', 180.00, 240, '2024-12-31 09:00:00', '2024-12-31 13:00:00', 101, 102, 1001);

-- Southeast direction (Starker to Parker)
INSERT INTO train_schedule (line_name, fare, travel_time, departure_time, arrival_time, origin_station, destination_station, train)
VALUES ('Southeast Express', 180.00, 240, '2024-12-31 14:00:00', '2024-12-31 18:00:00', 102, 101, 1002);
-- Stops for Northeast Express (Parker to Starker)
INSERT INTO stops (arrival_time, departure_time, stop_number, fare, train, line_name, origin_departure_time, station) VALUES
('2024-12-31 10:00:00', '2024-12-31 10:05:00', 2, 20.00, 1001, 'Northeast Express', '2024-12-31 09:00:00', 400),    -- New Haven
('2024-12-31 10:30:00', '2024-12-31 10:35:00', 3, 20.00, 1001, 'Northeast Express', '2024-12-31 09:00:00', 500),    -- Hartford
('2024-12-31 11:00:00', '2024-12-31 11:05:00', 4, 20.00, 1001, 'Northeast Express', '2024-12-31 09:00:00', 600),   -- Springfield
('2024-12-31 11:30:00', '2024-12-31 11:35:00', 5, 20.00, 1001, 'Northeast Express', '2024-12-31 09:00:00', 700),   -- Worcester
('2024-12-31 12:00:00', '2024-12-31 12:05:00', 6, 20.00, 1001, 'Northeast Express', '2024-12-31 09:00:00', 300),   -- Providence
('2024-12-31 12:30:00', '2024-12-31 12:35:00', 6, 20.00, 1001, 'Northeast Express', '2024-12-31 09:00:00', 102);
-- Stops for Southeast Express (South to Penn)
INSERT INTO stops (arrival_time, departure_time, stop_number, fare, train, line_name, origin_departure_time, station) VALUES
('2024-12-31 15:00:00', '2024-12-31 15:05:00', 2, 20.00, 1002, 'Southeast Express', '2024-12-31 14:00:00', 300),    -- Providence
('2024-12-31 15:30:00', '2024-12-31 15:35:00', 3, 20.00, 1002, 'Southeast Express', '2024-12-31 14:00:00', 700),    -- Worcester
('2024-12-31 16:00:00', '2024-12-31 16:05:00', 4, 20.00, 1002, 'Southeast Express', '2024-12-31 14:00:00', 600),   -- Springfield
('2024-12-31 16:30:00', '2024-12-31 16:35:00', 5, 20.00, 1002, 'Southeast Express', '2024-12-31 14:00:00', 500),   -- Hartford
('2024-12-31 17:00:00', '2024-12-31 17:05:00', 6, 20.00, 1002, 'Southeast Express', '2024-12-31 14:00:00', 400),
('2024-12-31 12:30:00', '2024-12-31 12:35:00', 6, 20.00, 1001, 'Northeast Express', '2024-12-31 09:00:00', 101);